# Один заказчик попросил нас написать небольшой скрипт для своих криптографических нужд.
# При этом он заранее предупредил, что скрипт должен уметь работать с любым итерируемым типом данных.
# Напишите функцию, которая возвращает список из элементов итерируемого объекта (кортежа, строки, списка, словаря), у которых индекс чётный.
# Пример 1:
# Допустим, есть такая строка: 'О Дивный Новый мир!'
# Результат: ['О', 'Д', 'в', 'ы', ' ', 'о', 'ы', ' ', 'и', '!']
# Пример 2:
# Допустим, есть такой список: [100, 200, 300, 'буква', 0, 2, 'а']
# Результат: [100, 300, 0, 'а']
# Примечание: для проверки типа можно использовать функцию
# isinstance(<элемент>, <тип данных>),
# которая возвращает True, если элемент принадлежит к этому типу данных, и возвращает False в противном случае.
#_____________________________________________________________________________________________________________
# def get_list(iter):
# 	if isinstance(iter, dict):
# 		list = [value for key, value in iter.items() if key % 2 == 0]
# 	else:
# 		list = [sym for i, sym in enumerate(iter) if i % 2 == 0]
# 	return list
#
# print(get_list('О Дивный Новый мир!'))
# print(get_list([100, 200, 300, 'буква', 0, 2, 'а']))
# print(get_list({0: 'е', 1: 'о', 2: 'ч', 3: 'ы', 4: 'в', 5: 'н', 6: 'д', 7: 'а', 8: 'ш', 9: 'ц'}))
#_____________________________________________________________________________________________________________
def return_even_elements(data):
    result = []
    if isinstance(data, dict):
        data = data.items()
    for index, value in enumerate(data):
        if index % 2 == 0:
            result.append(value)
    return result


print(return_even_elements('О Дивный Новый мир!'))
print(return_even_elements([100, 200, 300, 'буква', 0, 2, 'а']))
print(return_even_elements({0: 'е', 1: 'о', 2: 'ч', 3: 'ы', 4: 'в', 5: 'н', 6: 'д', 7: 'а', 8: 'ш', 9: 'ц'}))